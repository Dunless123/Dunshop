{"version":3,"file":"index.js","sources":["uni_modules/uv-ui-tools/libs/function/index.js"],"sourcesContent":["import { number, empty } from './test.js'\nimport { round } from './digit.js'\n/**\n * @description 如果value小于min，取min；如果value大于max，取max\n * @param {number} min\n * @param {number} max\n * @param {number} value\n */\nfunction range(min = 0, max = 0, value = 0) {\n\treturn Math.max(min, Math.min(max, Number(value)))\n}\n\n/**\n * @description 用于获取用户传递值的px值  如果用户传递了\"xxpx\"或者\"xxrpx\"，取出其数值部分，如果是\"xxxrpx\"还需要用过uni.upx2px进行转换\n * @param {number|string} value 用户传递值的px值\n * @param {boolean} unit\n * @returns {number|string}\n */\nfunction getPx(value, unit = false) {\n\tif (number(value)) {\n\t\treturn unit ? `${value}px` : Number(value)\n\t}\n\t// 如果带有rpx，先取出其数值部分，再转为px值\n\tif (/(rpx|upx)$/.test(value)) {\n\t\treturn unit ? `${uni.upx2px(parseInt(value))}px` : Number(uni.upx2px(parseInt(value)))\n\t}\n\treturn unit ? `${parseInt(value)}px` : parseInt(value)\n}\n\n/**\n * @description 进行延时，以达到可以简写代码的目的 比如: await uni.$uv.sleep(20)将会阻塞20ms\n * @param {number} value 堵塞时间 单位ms 毫秒\n * @returns {Promise} 返回promise\n */\nfunction sleep(value = 30) {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve()\n\t\t}, value)\n\t})\n}\n/**\n * @description 运行期判断平台\n * @returns {string} 返回所在平台(小写)\n * @link 运行期判断平台 https://uniapp.dcloud.io/frame?id=判断平台\n */\nfunction os() {\n\treturn uni.getSystemInfoSync().platform.toLowerCase()\n}\n/**\n * @description 获取系统信息同步接口\n * @link 获取系统信息同步接口 https://uniapp.dcloud.io/api/system/info?id=getsysteminfosync\n */\nfunction sys() {\n\treturn uni.getSystemInfoSync()\n}\n\n/**\n * @description 取一个区间数\n * @param {Number} min 最小值\n * @param {Number} max 最大值\n */\nfunction random(min, max) {\n\tif (min >= 0 && max > 0 && max >= min) {\n\t\tconst gab = max - min + 1\n\t\treturn Math.floor(Math.random() * gab + min)\n\t}\n\treturn 0\n}\n\n/**\n * @param {Number} len uuid的长度\n * @param {Boolean} firstU 将返回的首字母置为\"u\"\n * @param {Nubmer} radix 生成uuid的基数(意味着返回的字符串都是这个基数),2-二进制,8-八进制,10-十进制,16-十六进制\n */\nfunction guid(len = 32, firstU = true, radix = null) {\n\tconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\n\tconst uuid = []\n\tradix = radix || chars.length\n\n\tif (len) {\n\t\t// 如果指定uuid长度,只是取随机的字符,0|x为位运算,能去掉x的小数位,返回整数位\n\t\tfor (let i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix]\n\t} else {\n\t\tlet r\n\t\t// rfc4122标准要求返回的uuid中,某些位为固定的字符\n\t\tuuid[8] = uuid[13] = uuid[18] = uuid[23] = '-'\n\t\tuuid[14] = '4'\n\n\t\tfor (let i = 0; i < 36; i++) {\n\t\t\tif (!uuid[i]) {\n\t\t\t\tr = 0 | Math.random() * 16\n\t\t\t\tuuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r]\n\t\t\t}\n\t\t}\n\t}\n\t// 移除第一个字符,并用u替代,因为第一个字符为数值时,该guuid不能用作id或者class\n\tif (firstU) {\n\t\tuuid.shift()\n\t\treturn `u${uuid.join('')}`\n\t}\n\treturn uuid.join('')\n}\n\n/**\n* @description 获取父组件的参数，因为支付宝小程序不支持provide/inject的写法\n   this.$parent在非H5中，可以准确获取到父组件，但是在H5中，需要多次this.$parent.$parent.xxx\n   这里默认值等于undefined有它的含义，因为最顶层元素(组件)的$parent就是undefined，意味着不传name\n   值(默认为undefined)，就是查找最顶层的$parent\n*  @param {string|undefined} name 父组件的参数名\n*/\nfunction $parent(name = undefined) {\n\tlet parent = this.$parent\n\t// 通过while历遍，这里主要是为了H5需要多层解析的问题\n\twhile (parent) {\n\t\t// 父组件\n\t\tif (parent.$options && parent.$options.name !== name) {\n\t\t\t// 如果组件的name不相等，继续上一级寻找\n\t\t\tparent = parent.$parent\n\t\t} else {\n\t\t\treturn parent\n\t\t}\n\t}\n\treturn false\n}\n\n/**\n * @description 样式转换\n * 对象转字符串，或者字符串转对象\n * @param {object | string} customStyle 需要转换的目标\n * @param {String} target 转换的目的，object-转为对象，string-转为字符串\n * @returns {object|string}\n */\nfunction addStyle(customStyle, target = 'object') {\n\t// 字符串转字符串，对象转对象情形，直接返回\n\tif (empty(customStyle) || typeof(customStyle) === 'object' && target === 'object' || target === 'string' &&\n\t\ttypeof(customStyle) === 'string') {\n\t\treturn customStyle\n\t}\n\t// 字符串转对象\n\tif (target === 'object') {\n\t\t// 去除字符串样式中的两端空格(中间的空格不能去掉，比如padding: 20px 0如果去掉了就错了)，空格是无用的\n\t\tcustomStyle = trim(customStyle)\n\t\t// 根据\";\"将字符串转为数组形式\n\t\tconst styleArray = customStyle.split(';')\n\t\tconst style = {}\n\t\t// 历遍数组，拼接成对象\n\t\tfor (let i = 0; i < styleArray.length; i++) {\n\t\t\t// 'font-size:20px;color:red;'，如此最后字符串有\";\"的话，会导致styleArray最后一个元素为空字符串，这里需要过滤\n\t\t\tif (styleArray[i]) {\n\t\t\t\tconst item = styleArray[i].split(':')\n\t\t\t\tstyle[trim(item[0])] = trim(item[1])\n\t\t\t}\n\t\t}\n\t\treturn style\n\t}\n\t// 这里为对象转字符串形式\n\tlet string = ''\n\tfor (const i in customStyle) {\n\t\t// 驼峰转为中划线的形式，否则css内联样式，无法识别驼峰样式属性名\n\t\tconst key = i.replace(/([A-Z])/g, '-$1').toLowerCase()\n\t\tstring += `${key}:${customStyle[i]};`\n\t}\n\t// 去除两端空格\n\treturn trim(string)\n}\n\n/**\n * @description 添加单位，如果有rpx，upx，%，px等单位结尾或者值为auto，直接返回，否则加上px单位结尾\n * @param {string|number} value 需要添加单位的值\n * @param {string} unit 添加的单位名 比如px\n */\nfunction addUnit(value = 'auto', unit = uni?.$uv?.config?.unit ? uni?.$uv?.config?.unit : 'px') {\n\tvalue = String(value)\n\t// 用uvui内置验证规则中的number判断是否为数值\n\treturn number(value) ? `${value}${unit}` : value\n}\n\n/**\n * @description 深度克隆\n * @param {object} obj 需要深度克隆的对象\n * @param cache 缓存\n * @returns {*} 克隆后的对象或者原值（不是对象）\n */\nfunction deepClone(obj, cache = new WeakMap()) {\n\tif (obj === null || typeof obj !== 'object') return obj;\n\tif (cache.has(obj)) return cache.get(obj);\n\tlet clone;\n\tif (obj instanceof Date) {\n\t\tclone = new Date(obj.getTime());\n\t} else if (obj instanceof RegExp) {\n\t\tclone = new RegExp(obj);\n\t} else if (obj instanceof Map) {\n\t\tclone = new Map(Array.from(obj, ([key, value]) => [key, deepClone(value, cache)]));\n\t} else if (obj instanceof Set) {\n\t\tclone = new Set(Array.from(obj, value => deepClone(value, cache)));\n\t} else if (Array.isArray(obj)) {\n\t\tclone = obj.map(value => deepClone(value, cache));\n\t} else if (Object.prototype.toString.call(obj) === '[object Object]') {\n\t\tclone = Object.create(Object.getPrototypeOf(obj));\n\t\tcache.set(obj, clone);\n\t\tfor (const [key, value] of Object.entries(obj)) {\n\t\t\tclone[key] = deepClone(value, cache);\n\t\t}\n\t} else {\n\t\tclone = Object.assign({}, obj);\n\t}\n\tcache.set(obj, clone);\n\treturn clone;\n}\n\n/**\n * @description JS对象深度合并\n * @param {object} target 需要拷贝的对象\n * @param {object} source 拷贝的来源对象\n * @returns {object|boolean} 深度合并后的对象或者false（入参有不是对象）\n */\nfunction deepMerge(target = {}, source = {}) {\n\ttarget = deepClone(target)\n\tif (typeof target !== 'object' || target === null || typeof source !== 'object' || source === null) return target;\n\tconst merged = Array.isArray(target) ? target.slice() : Object.assign({}, target);\n\tfor (const prop in source) {\n\t\tif (!source.hasOwnProperty(prop)) continue;\n\t\tconst sourceValue = source[prop];\n\t\tconst targetValue = merged[prop];\n\t\tif (sourceValue instanceof Date) {\n\t\t\tmerged[prop] = new Date(sourceValue);\n\t\t} else if (sourceValue instanceof RegExp) {\n\t\t\tmerged[prop] = new RegExp(sourceValue);\n\t\t} else if (sourceValue instanceof Map) {\n\t\t\tmerged[prop] = new Map(sourceValue);\n\t\t} else if (sourceValue instanceof Set) {\n\t\t\tmerged[prop] = new Set(sourceValue);\n\t\t} else if (typeof sourceValue === 'object' && sourceValue !== null) {\n\t\t\tmerged[prop] = deepMerge(targetValue, sourceValue);\n\t\t} else {\n\t\t\tmerged[prop] = sourceValue;\n\t\t}\n\t}\n\treturn merged;\n}\n\n/**\n * @description error提示\n * @param {*} err 错误内容\n */\nfunction error(err) {\n\t// 开发环境才提示，生产环境不会提示\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconsole.error(`uvui提示：${err}`)\n\t}\n}\n\n/**\n * @description 打乱数组\n * @param {array} array 需要打乱的数组\n * @returns {array} 打乱后的数组\n */\nfunction randomArray(array = []) {\n\t// 原理是sort排序,Math.random()产生0<= x < 1之间的数,会导致x-0.05大于或者小于0\n\treturn array.sort(() => Math.random() - 0.5)\n}\n\n// padStart 的 polyfill，因为某些机型或情况，还无法支持es7的padStart，比如电脑版的微信小程序\n// 所以这里做一个兼容polyfill的兼容处理\nif (!String.prototype.padStart) {\n\t// 为了方便表示这里 fillString 用了ES6 的默认参数，不影响理解\n\tString.prototype.padStart = function(maxLength, fillString = ' ') {\n\t\tif (Object.prototype.toString.call(fillString) !== '[object String]') {\n\t\t\tthrow new TypeError(\n\t\t\t\t'fillString must be String'\n\t\t\t)\n\t\t}\n\t\tconst str = this\n\t\t// 返回 String(str) 这里是为了使返回的值是字符串字面量，在控制台中更符合直觉\n\t\tif (str.length >= maxLength) return String(str)\n\n\t\tconst fillLength = maxLength - str.length\n\t\tlet times = Math.ceil(fillLength / fillString.length)\n\t\twhile (times >>= 1) {\n\t\t\tfillString += fillString\n\t\t\tif (times === 1) {\n\t\t\t\tfillString += fillString\n\t\t\t}\n\t\t}\n\t\treturn fillString.slice(0, fillLength) + str\n\t}\n}\n\n/**\n * @description 格式化时间\n * @param {String|Number} dateTime 需要格式化的时间戳\n * @param {String} fmt 格式化规则 yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合 默认yyyy-mm-dd\n * @returns {string} 返回格式化后的字符串\n */\nfunction timeFormat(dateTime = null, formatStr = 'yyyy-mm-dd') {\n\tlet date\n\t// 若传入时间为假值，则取当前时间\n\tif (!dateTime) {\n\t\tdate = new Date()\n\t}\n\t// 若为unix秒时间戳，则转为毫秒时间戳（逻辑有点奇怪，但不敢改，以保证历史兼容）\n\telse if (/^\\d{10}$/.test(dateTime?.toString().trim())) {\n\t\tdate = new Date(dateTime * 1000)\n\t}\n\t// 若用户传入字符串格式时间戳，new Date无法解析，需做兼容\n\telse if (typeof dateTime === 'string' && /^\\d+$/.test(dateTime.trim())) {\n\t\tdate = new Date(Number(dateTime))\n\t}\n\t// 处理平台性差异，在Safari/Webkit中，new Date仅支持/作为分割符的字符串时间\n\t// 处理 '2022-07-10 01:02:03'，跳过 '2022-07-10T01:02:03'\n\telse if (typeof dateTime === 'string' && dateTime.includes('-') && !dateTime.includes('T')) {\n\t\tdate = new Date(dateTime.replace(/-/g, '/'))\n\t}\n\t// 其他都认为符合 RFC 2822 规范\n\telse {\n\t\tdate = new Date(dateTime)\n\t}\n\n\tconst timeSource = {\n\t\t'y': date.getFullYear().toString(), // 年\n\t\t'm': (date.getMonth() + 1).toString().padStart(2, '0'), // 月\n\t\t'd': date.getDate().toString().padStart(2, '0'), // 日\n\t\t'h': date.getHours().toString().padStart(2, '0'), // 时\n\t\t'M': date.getMinutes().toString().padStart(2, '0'), // 分\n\t\t's': date.getSeconds().toString().padStart(2, '0') // 秒\n\t\t// 有其他格式化字符需求可以继续添加，必须转化成字符串\n\t}\n\n\tfor (const key in timeSource) {\n\t\tconst [ret] = new RegExp(`${key}+`).exec(formatStr) || []\n\t\tif (ret) {\n\t\t\t// 年可能只需展示两位\n\t\t\tconst beginIndex = key === 'y' && ret.length === 2 ? 2 : 0\n\t\t\tformatStr = formatStr.replace(ret, timeSource[key].slice(beginIndex))\n\t\t}\n\t}\n\n\treturn formatStr\n}\n\n/**\n * @description 时间戳转为多久之前\n * @param {String|Number} timestamp 时间戳\n * @param {String|Boolean} format\n * 格式化规则如果为时间格式字符串，超出一定时间范围，返回固定的时间格式；\n * 如果为布尔值false，无论什么时间，都返回多久以前的格式\n * @returns {string} 转化后的内容\n */\nfunction timeFrom(timestamp = null, format = 'yyyy-mm-dd') {\n\tif (timestamp == null) timestamp = Number(new Date())\n\ttimestamp = parseInt(timestamp)\n\t// 判断用户输入的时间戳是秒还是毫秒,一般前端js获取的时间戳是毫秒(13位),后端传过来的为秒(10位)\n\tif (timestamp.toString().length == 10) timestamp *= 1000\n\tlet timer = (new Date()).getTime() - timestamp\n\ttimer = parseInt(timer / 1000)\n\t// 如果小于5分钟,则返回\"刚刚\",其他以此类推\n\tlet tips = ''\n\tswitch (true) {\n\t\tcase timer < 300:\n\t\t\ttips = '刚刚'\n\t\t\tbreak\n\t\tcase timer >= 300 && timer < 3600:\n\t\t\ttips = `${parseInt(timer / 60)}分钟前`\n\t\t\tbreak\n\t\tcase timer >= 3600 && timer < 86400:\n\t\t\ttips = `${parseInt(timer / 3600)}小时前`\n\t\t\tbreak\n\t\tcase timer >= 86400 && timer < 2592000:\n\t\t\ttips = `${parseInt(timer / 86400)}天前`\n\t\t\tbreak\n\t\tdefault:\n\t\t\t// 如果format为false，则无论什么时间戳，都显示xx之前\n\t\t\tif (format === false) {\n\t\t\t\tif (timer >= 2592000 && timer < 365 * 86400) {\n\t\t\t\t\ttips = `${parseInt(timer / (86400 * 30))}个月前`\n\t\t\t\t} else {\n\t\t\t\t\ttips = `${parseInt(timer / (86400 * 365))}年前`\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttips = timeFormat(timestamp, format)\n\t\t\t}\n\t}\n\treturn tips\n}\n\n/**\n * @description 去除空格\n * @param String str 需要去除空格的字符串\n * @param String pos both(左右)|left|right|all 默认both\n */\nfunction trim(str, pos = 'both') {\n\tstr = String(str)\n\tif (pos == 'both') {\n\t\treturn str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\tif (pos == 'left') {\n\t\treturn str.replace(/^\\s*/, '')\n\t}\n\tif (pos == 'right') {\n\t\treturn str.replace(/(\\s*$)/g, '')\n\t}\n\tif (pos == 'all') {\n\t\treturn str.replace(/\\s+/g, '')\n\t}\n\treturn str\n}\n\n/**\n * @description 对象转url参数\n * @param {object} data,对象\n * @param {Boolean} isPrefix,是否自动加上\"?\"\n * @param {string} arrayFormat 规则 indices|brackets|repeat|comma\n */\nfunction queryParams(data = {}, isPrefix = true, arrayFormat = 'brackets') {\n\tconst prefix = isPrefix ? '?' : ''\n\tconst _result = []\n\tif (['indices', 'brackets', 'repeat', 'comma'].indexOf(arrayFormat) == -1) arrayFormat = 'brackets'\n\tfor (const key in data) {\n\t\tconst value = data[key]\n\t\t// 去掉为空的参数\n\t\tif (['', undefined, null].indexOf(value) >= 0) {\n\t\t\tcontinue\n\t\t}\n\t\t// 如果值为数组，另行处理\n\t\tif (value.constructor === Array) {\n\t\t\t// e.g. {ids: [1, 2, 3]}\n\t\t\tswitch (arrayFormat) {\n\t\t\t\tcase 'indices':\n\t\t\t\t\t// 结果: ids[0]=1&ids[1]=2&ids[2]=3\n\t\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\t\t_result.push(`${key}[${i}]=${value[i]}`)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase 'brackets':\n\t\t\t\t\t// 结果: ids[]=1&ids[]=2&ids[]=3\n\t\t\t\t\tvalue.forEach((_value) => {\n\t\t\t\t\t\t_result.push(`${key}[]=${_value}`)\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\tcase 'repeat':\n\t\t\t\t\t// 结果: ids=1&ids=2&ids=3\n\t\t\t\t\tvalue.forEach((_value) => {\n\t\t\t\t\t\t_result.push(`${key}=${_value}`)\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\tcase 'comma':\n\t\t\t\t\t// 结果: ids=1,2,3\n\t\t\t\t\tlet commaStr = ''\n\t\t\t\t\tvalue.forEach((_value) => {\n\t\t\t\t\t\tcommaStr += (commaStr ? ',' : '') + _value\n\t\t\t\t\t})\n\t\t\t\t\t_result.push(`${key}=${commaStr}`)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tvalue.forEach((_value) => {\n\t\t\t\t\t\t_result.push(`${key}[]=${_value}`)\n\t\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\t_result.push(`${key}=${value}`)\n\t\t}\n\t}\n\treturn _result.length ? prefix + _result.join('&') : ''\n}\n\n/**\n * 显示消息提示框\n * @param {String} title 提示的内容，长度与 icon 取值有关。\n * @param {Number} duration 提示的延迟时间，单位毫秒，默认：2000\n */\nfunction toast(title, duration = 2000) {\n\tuni.showToast({\n\t\ttitle: String(title),\n\t\ticon: 'none',\n\t\tduration\n\t})\n}\n\n/**\n * @description 根据主题type值,获取对应的图标\n * @param {String} type 主题名称,primary|info|error|warning|success\n * @param {boolean} fill 是否使用fill填充实体的图标\n */\nfunction type2icon(type = 'success', fill = false) {\n\t// 如果非预置值,默认为success\n\tif (['primary', 'info', 'error', 'warning', 'success'].indexOf(type) == -1) type = 'success'\n\tlet iconName = ''\n\t// 目前(2019-12-12),info和primary使用同一个图标\n\tswitch (type) {\n\t\tcase 'primary':\n\t\t\ticonName = 'info-circle'\n\t\t\tbreak\n\t\tcase 'info':\n\t\t\ticonName = 'info-circle'\n\t\t\tbreak\n\t\tcase 'error':\n\t\t\ticonName = 'close-circle'\n\t\t\tbreak\n\t\tcase 'warning':\n\t\t\ticonName = 'error-circle'\n\t\t\tbreak\n\t\tcase 'success':\n\t\t\ticonName = 'checkmark-circle'\n\t\t\tbreak\n\t\tdefault:\n\t\t\ticonName = 'checkmark-circle'\n\t}\n\t// 是否是实体类型,加上-fill,在icon组件库中,实体的类名是后面加-fill的\n\tif (fill) iconName += '-fill'\n\treturn iconName\n}\n\n/**\n * @description 数字格式化\n * @param {number|string} number 要格式化的数字\n * @param {number} decimals 保留几位小数\n * @param {string} decimalPoint 小数点符号\n * @param {string} thousandsSeparator 千分位符号\n * @returns {string} 格式化后的数字\n */\nfunction priceFormat(number, decimals = 0, decimalPoint = '.', thousandsSeparator = ',') {\n\tnumber = (`${number}`).replace(/[^0-9+-Ee.]/g, '')\n\tconst n = !isFinite(+number) ? 0 : +number\n\tconst prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n\tconst sep = (typeof thousandsSeparator === 'undefined') ? ',' : thousandsSeparator\n\tconst dec = (typeof decimalPoint === 'undefined') ? '.' : decimalPoint\n\tlet s = ''\n\n\ts = (prec ? round(n, prec) + '' : `${Math.round(n)}`).split('.')\n\tconst re = /(-?\\d+)(\\d{3})/\n\twhile (re.test(s[0])) {\n\t\ts[0] = s[0].replace(re, `$1${sep}$2`)\n\t}\n\n\tif ((s[1] || '').length < prec) {\n\t\ts[1] = s[1] || ''\n\t\ts[1] += new Array(prec - s[1].length + 1).join('0')\n\t}\n\treturn s.join(dec)\n}\n\n/**\n * @description 获取duration值\n * 如果带有ms或者s直接返回，如果大于一定值，认为是ms单位，小于一定值，认为是s单位\n * 比如以30位阈值，那么300大于30，可以理解为用户想要的是300ms，而不是想花300s去执行一个动画\n * @param {String|number} value 比如: \"1s\"|\"100ms\"|1|100\n * @param {boolean} unit  提示: 如果是false 默认返回number\n * @return {string|number}\n */\nfunction getDuration(value, unit = true) {\n\tconst valueNum = parseInt(value)\n\tif (unit) {\n\t\tif (/s$/.test(value)) return value\n\t\treturn value > 30 ? `${value}ms` : `${value}s`\n\t}\n\tif (/ms$/.test(value)) return valueNum\n\tif (/s$/.test(value)) return valueNum > 30 ? valueNum : valueNum * 1000\n\treturn valueNum\n}\n\n/**\n * @description 日期的月或日补零操作\n * @param {String} value 需要补零的值\n */\nfunction padZero(value) {\n\treturn `00${value}`.slice(-2)\n}\n\n/**\n * @description 在uv-form的子组件内容发生变化，或者失去焦点时，尝试通知uv-form执行校验方法\n * @param {*} instance\n * @param {*} event\n */\nfunction formValidate(instance, event) {\n\tconst formItem = $parent.call(instance, 'uv-form-item')\n\tconst form = $parent.call(instance, 'uv-form')\n\t// 如果发生变化的input或者textarea等，其父组件中有uv-form-item或者uv-form等，就执行form的validate方法\n\t// 同时将form-item的pros传递给form，让其进行精确对象验证\n\tif (formItem && form) {\n\t\tform.validateField(formItem.prop, () => {}, event)\n\t}\n}\n\n/**\n * @description 获取某个对象下的属性，用于通过类似'a.b.c'的形式去获取一个对象的的属性的形式\n * @param {object} obj 对象\n * @param {string} key 需要获取的属性字段\n * @returns {*}\n */\nfunction getProperty(obj, key) {\n\tif (!obj) {\n\t\treturn\n\t}\n\tif (typeof key !== 'string' || key === '') {\n\t\treturn ''\n\t}\n\tif (key.indexOf('.') !== -1) {\n\t\tconst keys = key.split('.')\n\t\tlet firstObj = obj[keys[0]] || {}\n\n\t\tfor (let i = 1; i < keys.length; i++) {\n\t\t\tif (firstObj) {\n\t\t\t\tfirstObj = firstObj[keys[i]]\n\t\t\t}\n\t\t}\n\t\treturn firstObj\n\t}\n\treturn obj[key]\n}\n\n/**\n * @description 设置对象的属性值，如果'a.b.c'的形式进行设置\n * @param {object} obj 对象\n * @param {string} key 需要设置的属性\n * @param {string} value 设置的值\n */\nfunction setProperty(obj, key, value) {\n\tif (!obj) {\n\t\treturn\n\t}\n\t// 递归赋值\n\tconst inFn = function(_obj, keys, v) {\n\t\t// 最后一个属性key\n\t\tif (keys.length === 1) {\n\t\t\t_obj[keys[0]] = v\n\t\t\treturn\n\t\t}\n\t\t// 0~length-1个key\n\t\twhile (keys.length > 1) {\n\t\t\tconst k = keys[0]\n\t\t\tif (!_obj[k] || (typeof _obj[k] !== 'object')) {\n\t\t\t\t_obj[k] = {}\n\t\t\t}\n\t\t\tconst key = keys.shift()\n\t\t\t// 自调用判断是否存在属性，不存在则自动创建对象\n\t\t\tinFn(_obj[k], keys, v)\n\t\t}\n\t}\n\n\tif (typeof key !== 'string' || key === '') {\n\n\t} else if (key.indexOf('.') !== -1) { // 支持多层级赋值操作\n\t\tconst keys = key.split('.')\n\t\tinFn(obj, keys, value)\n\t} else {\n\t\tobj[key] = value\n\t}\n}\n\n/**\n * @description 获取当前页面路径\n */\nfunction page() {\n\tconst pages = getCurrentPages();\n\tconst route = pages[pages.length - 1]?.route;\n\t// 某些特殊情况下(比如页面进行redirectTo时的一些时机)，pages可能为空数组\n\treturn `/${route ? route : ''}`\n}\n\n/**\n * @description 获取当前路由栈实例数组\n */\nfunction pages() {\n\tconst pages = getCurrentPages()\n\treturn pages\n}\n\n/**\n * 获取页面历史栈指定层实例\n * @param back {number} [0] - 0或者负数，表示获取历史栈的哪一层，0表示获取当前页面实例，-1 表示获取上一个页面实例。默认0。\n */\nfunction getHistoryPage(back = 0) {\n\tconst pages = getCurrentPages()\n\tconst len = pages.length\n\treturn pages[len - 1 + back]\n}\n\n\n\n/**\n * @description 修改uvui内置属性值\n * @param {object} props 修改内置props属性\n * @param {object} config 修改内置config属性\n * @param {object} color 修改内置color属性\n * @param {object} zIndex 修改内置zIndex属性\n */\nfunction setConfig({\n\tprops = {},\n\tconfig = {},\n\tcolor = {},\n\tzIndex = {}\n}) {\n\tconst {\n\t\tdeepMerge,\n\t} = uni.$uv\n\tuni.$uv.config = deepMerge(uni.$uv.config, config)\n\tuni.$uv.props = deepMerge(uni.$uv.props, props)\n\tuni.$uv.color = deepMerge(uni.$uv.color, color)\n\tuni.$uv.zIndex = deepMerge(uni.$uv.zIndex, zIndex)\n}\n\nexport {\n\trange,\n\tgetPx,\n\tsleep,\n\tos,\n\tsys,\n\trandom,\n\tguid,\n\t$parent,\n\taddStyle,\n\taddUnit,\n\tdeepClone,\n\tdeepMerge,\n\terror,\n\trandomArray,\n\ttimeFormat,\n\ttimeFrom,\n\ttrim,\n\tqueryParams,\n\ttoast,\n\ttype2icon,\n\tpriceFormat,\n\tgetDuration,\n\tpadZero,\n\tformValidate,\n\tgetProperty,\n\tsetProperty,\n\tpage,\n\tpages,\n\tgetHistoryPage,\n\tsetConfig\n}"],"names":["number","uni","empty","round","pages","deepMerge"],"mappings":"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"}